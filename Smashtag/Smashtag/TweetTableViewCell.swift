//
//  TweetTableViewCell.swift
//  Smashtag
//
//  Created by CS193p Instructor on 2/8/17.
//  Copyright ¬© 2017 Stanford University. All rights reserved.
//

import UIKit
import Twitter

class TweetTableViewCell: UITableViewCell
{
    // outlets –∫ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –≤ –Ω–∞—à–µ–π Custom UITableViewCell
    @IBOutlet weak var tweetProfileImageView: UIImageView!
    @IBOutlet weak var tweetCreatedLabel: UILabel!
    @IBOutlet weak var tweetUserLabel: UILabel!
    @IBOutlet weak var tweetTextLabel: UILabel!

    // public API subclass —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ UITableViewCell
    // –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
    // –∏ —É –∫–∞–∂–¥–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±—É–¥–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π tweet –¥–ª—è –ø–æ–∫–∞–∑–∞
    // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è var
    var tweet: Twitter.Tweet? { didSet { updateUI() } }
    
    // –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—à public API tweet —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
    // –º—ã –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–∏ outlets, –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
    private func updateUI() {
        
        tweetTextLabel?.attributedText  = setTextLabel(tweet)
        tweetUserLabel?.text = tweet?.user.description
        setProfileImageView(tweet) // tweetProfileImageView –æ–±–Ω–æ–≤–ª—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        
        if let created = tweet?.created {
            let formatter = DateFormatter()
            if Date().timeIntervalSince(created) > 24*60*60 {
                formatter.dateStyle = .short
            } else {
                formatter.timeStyle = .short
            }
            tweetCreatedLabel?.text = formatter.string(from: created)
        } else {
            tweetCreatedLabel?.text = nil
        }
    }
    
    private func setProfileImageView(_ tweet: Twitter.Tweet?) {
        tweetProfileImageView?.image = nil
        guard let tweet = tweet,
            let profileImageURL = tweet.user.profileImageURL else {return}
        
        // MARK: –í—ã–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ main queue
        DispatchQueue.global(qos: .userInitiated).async {[weak self]  in
            
            let contentsOfURL = try? Data(contentsOf: profileImageURL)
            if profileImageURL == tweet.user.profileImageURL,
                let imageData = contentsOfURL  {
                
                // MARK: UI -> –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ main queue
                DispatchQueue.main.async {
                    self?.tweetProfileImageView?.image = UIImage(data: imageData)
                    
                }
            }
        }
    }


    private func setTextLabel(_ tweet: Twitter.Tweet?) -> NSMutableAttributedString {
        guard let tweet = tweet else {return NSMutableAttributedString(string: "")}
        var tweetText:String = tweet.text
        for _ in tweet.media {tweetText += " üì∑"}
        
        let attributedText = NSMutableAttributedString(string: tweetText)
        
        attributedText.setMensionsColor(tweet.hashtags, color: Palette.hashtagColor)
        attributedText.setMensionsColor(tweet.urls, color: Palette.urlColor)
        attributedText.setMensionsColor(tweet.userMentions, color: Palette.userColor)
        
        return attributedText
    }
    
    struct Palette {
        static let hashtagColor = UIColor.purple
        static let urlColor = UIColor.blue
        static let userColor = UIColor.orange
    }
}

// MARK: - –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ

private extension NSMutableAttributedString {
    func setMensionsColor(_ mensions: [Twitter.Mention], color: UIColor) {
        for mension in mensions {
            addAttribute(NSForegroundColorAttributeName, value: color,
                                                         range: mension.nsrange)
        }
    }
}
